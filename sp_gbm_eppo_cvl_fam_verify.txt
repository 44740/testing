CREATE OR REPLACE PROCEDURE GBM.sp_gbm_eppo_cvl_fam_verify (
   file_name_in       IN       VARCHAR2,
   ppo_no_in          IN       VARCHAR2,
   pp_acct_num_in     IN       VARCHAR2,
   sol_id_in          IN       VARCHAR2,
   user_id_in         IN       VARCHAR2,
   message_code_out   OUT      VARCHAR2
)
AS
   TYPE familycursor IS REF CURSOR;

   famcur                familycursor;
   familydateofbirth_l   gbm_eppo_cvl_bklet_fm_details.familydateofbirth%TYPE;
   familynationality_l   gbm_eppo_cvl_bklet_fm_details.familynationality%TYPE;
   fm_name_l             gbm_eppo_cvl_bklet_fm_details.fm_name%TYPE;
   isdisabled_l          gbm_eppo_cvl_bklet_fm_details.isdisabled%TYPE;
   maritalstatus_l       gbm_eppo_cvl_bklet_fm_details.maritalstatus%TYPE;
   relationshipdesc_l    gbm_eppo_cvl_bklet_fm_details.relationshipdesc%TYPE;
   bp_start_date_l       gbm_eppo_cvl_details.bp_start_date%TYPE;
   date_death_l          gbm_eppo_cvl_details.date_death%TYPE;
   frm_orfp_l            gbm_eppo_cvl_details.frm_orfp%TYPE;
   pp_type_l             gbm_eppo_cvl_details.pp_type%TYPE;
   sol_date_l            DATE;
   err_msg               LONG;
   fam_title_l           VARCHAR2 (10);
   fam_id_l              NUMBER                                          := 0;
   preference_l          NUMBER                                          := 0;
   family_id_l           VARCHAR2 (15);
   age_l                 NUMBER                                          := 0;
   relation_code_l       gbm_pp_family_details.relation_with_pensioner%TYPE;
   title_code_l          gbm_pp_family_details.title_code%TYPE;
   book_relationship_l   gbm_eppo_cvl_booklet_details.relationship%TYPE;
   book_fpname_l         gbm_eppo_cvl_booklet_details.fpname%TYPE;
   cnt_bklet_l           NUMBER;
   fm_cnt_l              NUMBER;
   fp_name_l             gbm_eppo_cvl_details.fp_name%TYPE;
   fp_dob_l              gbm_eppo_cvl_details.fp_dob%TYPE;
   cnt_l                 NUMBER;
   rtd_cnt_l             NUMBER;
   cnt_bklet_fam_l       NUMBER;
   fam_pp_start_date_l   DATE;
BEGIN
   SELECT TO_DATE (TO_CHAR (fn_getsoldate, 'DD/MM/YYYY'), 'DD/MM/YYYY')
     INTO sol_date_l
     FROM DUAL;

   SELECT COUNT (*)
     INTO cnt_l
     FROM gbm_eppo_cvl_booklet_details
    WHERE file_name = file_name_in;

   --Code added by Gopi.R on 11-06-2019 starts here
   SELECT pp_type
     INTO pp_type_l
     FROM gbm_eppo_cvl_details
    WHERE pp_acct_num = pp_acct_num_in;

    --Code ended by Gopi.R
--Code added by Gopi.R on 09-04-2019 starts here
-- If booklet details is not available then system will get inserted into gpfd
--by fetching data from gbm_eppo_cvl_details in the else part
   SELECT COUNT (*)
     INTO cnt_bklet_fam_l
     FROM gbm_eppo_cvl_booklet_details
    WHERE ppono = ppo_no_in AND dateofdeath IS NOT NULL;

   IF (cnt_bklet_fam_l > 0)
   THEN
      SELECT dateofdeath
        INTO fam_pp_start_date_l
        FROM gbm_eppo_cvl_booklet_details
       WHERE ppono = ppo_no_in;

      fam_pp_start_date_l := fam_pp_start_date_l + 1;
   END IF;

   IF (cnt_l > 0)
   THEN
      OPEN famcur FOR
         SELECT familydateofbirth, familynationality, fm_name, isdisabled,
                maritalstatus, relationshipdesc
           FROM gbm_eppo_cvl_bklet_fm_details
          WHERE file_name = file_name_in;

      SELECT bp_start_date, date_death, frm_orfp, pp_type
        INTO bp_start_date_l, date_death_l, frm_orfp_l, pp_type_l
        FROM gbm_eppo_cvl_details
       WHERE pp_acct_num = pp_acct_num_in;

      SELECT COUNT (*)
        INTO cnt_bklet_l
        FROM gbm_eppo_cvl_booklet_details
       WHERE ppono = ppo_no_in;

      SELECT COUNT (*)
        INTO fm_cnt_l
        FROM gbm_eppo_cvl_bklet_fm_details
       WHERE file_name = file_name_in;

      IF (cnt_bklet_l > 0)
      THEN
         SELECT UPPER (relationship), UPPER (fpname)
           INTO book_relationship_l, book_fpname_l
           FROM gbm_eppo_cvl_booklet_details
          WHERE ppono = ppo_no_in;
      END IF;

      IF (fm_cnt_l > 0)
      THEN
         SELECT relationshipdesc, fm_name
           INTO book_relationship_l, book_fpname_l
           FROM gbm_eppo_cvl_bklet_fm_details
          WHERE file_name = file_name_in;
      END IF;

      err_msg := 'Error while getting spouse relationship code';

      LOOP
         FETCH famcur
          INTO familydateofbirth_l, familynationality_l, fm_name_l,
               isdisabled_l, maritalstatus_l, relationshipdesc_l;

         EXIT WHEN famcur%NOTFOUND;

         SELECT sub_code
           INTO relation_code_l
           FROM gbm_sub_code_master
          WHERE code = '020'
            AND UPPER (sub_code_desc) = UPPER (relationshipdesc_l);

         /*SELECT sub_code
           INTO title_code_l
           FROM gbm_sub_code_master
          WHERE code = '056' AND SUB_CODE_DESC = RELATIONSHIPDESC_L;*/
         title_code_l := 'T002';

         -- since not relationsihip in new xml so hard coded
         IF (relationshipdesc_l IS NOT NULL)
         THEN
            IF (relationshipdesc_l = 'WIFE')
            THEN
               fam_title_l := 'Mrs/Dr';
            ELSE
               IF (relationshipdesc_l = 'DAUGHTER')
               THEN
                  fam_title_l := 'Miss';
               ELSE
                  IF (relationshipdesc_l = 'SON')
                  THEN
                     fam_title_l := 'Mr/Dr';
                  END IF;
               END IF;
            END IF;

            fam_id_l := fam_id_l + 1;
            preference_l := preference_l + 1;
            family_id_l := pp_acct_num_in || 'F' || fam_id_l;

            SELECT FLOOR
                        (  ROUND
                                (MONTHS_BETWEEN (fn_getsoldate,
                                                 TO_DATE (familydateofbirth_l,
                                                          'DD/MM/YYYY'
                                                         )
                                                )
                                )
                         / 12
                        )
              INTO age_l
              FROM DUAL;

            IF (pp_type_l = '0041')
            THEN
               INSERT INTO gbm_pp_family_details
                           (pp_acct_num, first_name, middle_name, last_name,
                            relation_with_pensioner,
                            dob, guardian_details,
                            preference, remarks, is_active, is_deleted,
                            verified_status, created_date, created_by,
                            opr_acct_num, salary, sal_eff_date, age,
                            title_code, fp_phone, fp_email, last_mod_by,
                            last_mod_date, family_id
                           )
                    VALUES (pp_acct_num_in, fm_name_l, '', '',
                            relation_code_l,
                            TO_DATE (familydateofbirth_l, 'DD/MM/YYYY'), '',
                            preference_l, '', 'N', 'N',
                            'Y', fn_getsoldate, 'SYSTEM',
                            '', NULL, NULL, age_l,
                            title_code_l, '', '', user_id_in,
                            SYSDATE, family_id_l
                           );
            ELSE
               IF (    relationshipdesc_l = book_relationship_l
                   AND fm_name_l = book_fpname_l
                  )
               THEN
                  INSERT INTO gbm_pp_family_details
                              (pp_acct_num, first_name, middle_name,
                               last_name, relation_with_pensioner,
                               dob,
                               guardian_details, preference, remarks,
                               is_active, is_deleted, verified_status,
                               created_date, created_by, opr_acct_num,
                               salary, sal_eff_date, age, title_code,
                               fp_phone, fp_email, last_mod_by,
                               last_mod_date, family_id
                              )
                       VALUES (pp_acct_num_in, fm_name_l, '',
                               '', relation_code_l,
                               TO_DATE (familydateofbirth_l, 'DD/MM/YYYY'),
                               '', 0, '',
                               'Y', 'N', 'Y',
                               fn_getsoldate, 'SYSTEM', '',
                               NULL, NULL, age_l, title_code_l,
                               '', '', user_id_in,
                               SYSDATE, family_id_l
                              );
               ELSE
                  INSERT INTO gbm_pp_family_details
                              (pp_acct_num, first_name, middle_name,
                               last_name, relation_with_pensioner,
                               dob,
                               guardian_details, preference, remarks,
                               is_active, is_deleted, verified_status,
                               created_date, created_by, opr_acct_num,
                               salary, sal_eff_date, age, title_code,
                               fp_phone, fp_email, last_mod_by,
                               last_mod_date, family_id
                              )
                       VALUES (pp_acct_num_in, fm_name_l, '',
                               '', relation_code_l,
                               TO_DATE (familydateofbirth_l, 'DD/MM/YYYY'),
                               '', preference_l, '',
                               'N', 'N', 'Y',
                               fn_getsoldate, 'SYSTEM', '',
                               NULL, NULL, age_l, title_code_l,
                               '', '', user_id_in,
                               SYSDATE, family_id_l
                              );
               END IF;
            END IF;

            INSERT INTO gbm_unverified_operations
                        (sol_id, sch_code, operation_id, operation,
                         is_tran_financial, verified_status, entered_date
                        )
                 VALUES (sol_id_in, '0003', family_id_l, 'A',
                         'N', 'Y', SYSDATE
                        );
         /*UPDATE gbm_pp_family_details
            SET aadhaar_no = spouse_aadhar_l,
                nationality = jn_spouse_nationality_l
          WHERE pp_acct_num = pp_acct_num_in AND family_id = family_id_l;*/
         END IF;
      END LOOP;
   ELSE
      IF (pp_type_l = '0041')
      THEN
         SELECT fp_name, fp_dob, bp_start_date, date_death,
                frm_orfp, pp_type
           INTO fp_name_l, fp_dob_l, bp_start_date_l, date_death_l,
                frm_orfp_l, pp_type_l
           FROM gbm_eppo_cvl_details
          WHERE file_name = file_name_in;
      ELSE
         SELECT pen_name, pensioner_dob, bp_start_date, date_death,
                frm_orfp, pp_type
           INTO fp_name_l, fp_dob_l, bp_start_date_l, date_death_l,
                frm_orfp_l, pp_type_l
           FROM gbm_eppo_cvl_details
          WHERE file_name = file_name_in;
      END IF;

      relationshipdesc_l := 'Spouse';

      SELECT sub_code
        INTO relation_code_l
        FROM gbm_sub_code_master
       WHERE code = '020' AND sub_code_desc = relationshipdesc_l;

      /*SELECT sub_code
        INTO title_code_l
        FROM gbm_sub_code_master
       WHERE code = '056' AND SUB_CODE_DESC = RELATIONSHIPDESC_L;*/
      title_code_l := 'T003';

      -- since not relationsihip in new xml so hard coded
      IF (relationshipdesc_l IS NOT NULL)
      THEN
         IF ((relationshipdesc_l = 'WIFE') OR (relationshipdesc_l = 'Spouse')
            )
         THEN
            fam_title_l := 'Mrs/Dr';
         ELSE
            IF (relationshipdesc_l = 'DAUGHTER')
            THEN
               fam_title_l := 'Miss';
            ELSE
               IF (relationshipdesc_l = 'SON')
               THEN
                  fam_title_l := 'Mr/Dr';
               END IF;
            END IF;
         END IF;

         fam_id_l := fam_id_l + 1;
         preference_l := preference_l + 1;
         family_id_l := pp_acct_num_in || 'F' || fam_id_l;

         SELECT FLOOR (  ROUND (MONTHS_BETWEEN (fn_getsoldate,
                                                TO_DATE (fp_dob_l,
                                                         'DD/MM/YYYY'
                                                        )
                                               )
                               )
                       / 12
                      )
           INTO age_l
           FROM DUAL;

         INSERT INTO gbm_pp_family_details
                     (pp_acct_num, first_name, middle_name, last_name,
                      relation_with_pensioner, dob, guardian_details,
                      preference, remarks, is_active, is_deleted,
                      verified_status, created_date, created_by,
                      opr_acct_num, salary, sal_eff_date, age, title_code,
                      fp_phone, fp_email, last_mod_by, last_mod_date,
                      family_id
                     )
              VALUES (pp_acct_num_in, fp_name_l, '', '',
                      relation_code_l, TO_DATE (fp_dob_l, 'DD/MM/YYYY'), '',
                      preference_l, '', 'N', 'N',
                      'Y', fn_getsoldate, 'SYSTEM',
                      '', NULL, NULL, age_l, title_code_l,
                      '', '', user_id_in, SYSDATE,
                      family_id_l
                     );

         INSERT INTO gbm_unverified_operations
                     (sol_id, sch_code, operation_id, operation,
                      is_tran_financial, verified_status, entered_date
                     )
              VALUES (sol_id_in, '0003', family_id_l, 'A',
                      'N', 'Y', SYSDATE
                     );
      /*UPDATE gbm_pp_family_details
         SET aadhaar_no = spouse_aadhar_l,
             nationality = jn_spouse_nationality_l
       WHERE pp_acct_num = pp_acct_num_in AND family_id = family_id_l;*/
      END IF;
   END IF;

   IF (pp_type_l = '0041')
   THEN
      UPDATE gbm_pp_family_details
         SET is_active = 'N'
       WHERE pp_acct_num = pp_acct_num_in;
   ELSIF (pp_type_l = '0042')
   THEN
      UPDATE gbm_pp_family_details
         SET is_active = 'Y'
       WHERE pp_acct_num = pp_acct_num_in;

      COMMIT;
   END IF;

   IF (pp_type_l = '0042')
   THEN
      SELECT COUNT (*)
        INTO rtd_cnt_l
        FROM gbm_eppo_cvl_booklet_details
       WHERE retirementdate IS NULL AND ppono = ppo_no_in;

      IF (rtd_cnt_l > 0)
      THEN
         UPDATE gbm_pp_family_details
            SET is_active = 'Y',
                preference = 0,
                pp_start_date = fam_pp_start_date_l
          WHERE pp_acct_num = pp_acct_num_in;
      END IF;
   END IF;

   message_code_out := 'SUCCESS';
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      message_code_out := 'M0000010';
      message_code_out := 'No Records Found';
   WHEN TOO_MANY_ROWS
   THEN
      message_code_out := 'M0000011';
      DBMS_OUTPUT.put_line ('Exception Too Many Rows - ');
      message_code_out := 'Exception Too Many Rows - ';
   WHEN DUP_VAL_ON_INDEX
   THEN
      message_code_out := 'M0000012';
      DBMS_OUTPUT.put_line ('dup_val_on_index - ');
   WHEN INVALID_CURSOR
   THEN
      DBMS_OUTPUT.put_line ('invalid_cursor  ');
   WHEN INVALID_NUMBER
   THEN
      DBMS_OUTPUT.put_line ('invalid_number - ');
   WHEN OTHERS
   THEN
      err_msg := err_msg || SQLERRM;
      message_code_out := 'FAILURE';
      DBMS_OUTPUT.put_line ('Error ' || SQLERRM);
      --result_out := 0;
      DBMS_OUTPUT.put_line ('No Records Found');
      ROLLBACK;
END;
/
